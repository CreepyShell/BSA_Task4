// <auto-generated />
using System;
using LINQ.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LINQ.DataAccess.Migrations
{
    [DbContext(typeof(LINQDbContext))]
    [Migration("20210703135712_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LINQ.DataAccess.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Name = "Stroika",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            Name = "Zavod",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Name = "Doroga",
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chinit dorogu",
                            PerformerId = 6,
                            ProjectId = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Stroit dorogu",
                            PerformerId = 6,
                            ProjectId = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rabotat na zavode",
                            PerformerId = 4,
                            ProjectId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Stroit doma",
                            PerformerId = 4,
                            ProjectId = 1
                        });
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bavarija"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Stroiteli"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Svarihciki"
                        });
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dave",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cristian",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ronald",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Anna",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Steve",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Roshar",
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.Project", b =>
                {
                    b.HasOne("LINQ.DataAccess.Models.Team", null)
                        .WithMany("Projects")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LINQ.DataAccess.Models.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.Task", b =>
                {
                    b.HasOne("LINQ.DataAccess.Models.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LINQ.DataAccess.Models.User", null)
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.User", b =>
                {
                    b.HasOne("LINQ.DataAccess.Models.Team", null)
                        .WithMany("Users")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.Team", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LINQ.DataAccess.Models.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
